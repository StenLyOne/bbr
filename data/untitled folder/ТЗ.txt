Техническое задание по доработке WordPress-админки
Проект: Next.js Front + WordPress Headless CMS
Фронтенд полностью готов, нужен финальный функционал админки

Вступление
Очень важно, чтобы если что-то непонятно — ты сразу спрашивал у меня. Лучше уточнить заранее и сделать правильно, чем потом переделывать. Мы оба заинтересованы в том, чтобы закончить проект быстро, качественно и без лишней головной боли.

Фронтенд уже полностью готов (Next.js), админка на WordPress — почти тоже. Остались только мелкие доработки и публикация.

Нужна только админка, чтобы редактировать контент на сайте. Весь фронт подтягивает данные через JSON. Если у тебя есть идеи, как ускорить процесс, упростить логику или сделать надёжнее — я полностью за.
Например, если возникают сложности с GraphQL — готов перейти на REST API, главное — чтобы данные приходили в нужном виде.

Так же прикрепил файлы с json в них нет сег полей, но на каждой странице сейчас есть seo поля, это единственное чего нет в моих json.

Вся админка должна быть полностью на англ

Всего страниц 12 

1. Home
2. Owned events, works (страницы самого ивента (/our-owned-evens/[slug]) и работы из портфиолио (/portfolio/[slug])) они по своей сути одинаковые
3. Portfolio страница со списком работ (/portfolio/)
4. Events (/our-owned-events/)
5. Team (/team/)
6. Our story (/our-story/)
7. Event management (event-management)
8. Pr service (/digital/)
9. Digital (/digital/)
10. Privacy Policy (/Privacy Policy/)
11. Cookies (/Cookies/)
12. Global setting это не страница, это лишь настройки для всего сайта, там будут храниться какие-то общие данные, я сам заполню чуть позже

Конкретные задачи

1. Кастомные поля в GraphQL или REST
- Все страницы уже готовы.
- Нужно, чтобы все кастомные поля попадали в GraphQL или REST API.
- С фронта данные будут забираться как JSON.
- Если GraphQL сложный или тормозит — можно перейти на REST, не проблема.

2. Копирование админки и публикация
- Скопировать текущую WP-админку (если она сейчас работает локально).
- Перенести её на хостинг.
- Проверить, что всё работает, все данные подтягиваются, админка стабильна.

3. Latest Block Instagram, (Home gape)
- На главной странице есть блок Latest.
- Логика должна быть следующая:
  - В админке вручную вставляются ссылки на Instagram-посты.
  - Через плагин эти ссылки автоматически отображаются на сайте, в виде карточек, как на скриншоте.

4. Страница Contact + контактная форма
- Сейчас работает только hero-блок с тайтлом и картинкой.
- Остальные секции уже есть в кастомных полях — их нужно подключить.
- Также необходимо:
  - Сделать API-эндпоинт, куда будет отправляться форма с фронта.
  - Сохранять отправленные данные в админке (например, в виде записей в CPT или специальной вкладке).
- Форма на фронте уже готова и отправляет запрос — нужно, чтобы данные принимались и сохранялись.

5. Cookie & Privacy — rich text
- Страница почти готова.
- Нужно, чтобы поле с текстом было Rich Text (редактор, типа WYSIWYG), а не простое textarea.
- Возможности:
  - Заголовки (H2, H3)
  - Жирный, курсив, подчеркивание
  - Списки, ссылки, абзацы и т.д.

6. Owned Events и Portfolio — hero-блоки
- Сейчас админ может добавлять кейсы и ивенты — это уже реализовано.
- Но на страницах самих кейсов и ивентов (/our-work/[slug], /our-owned-events/[slug]) нельзя редактировать Hero-блок.
- Нужно добавить возможность задавать:
  - title
  - subtitle (если есть)
  - hero image
- Эти поля должны быть в JSON и выводиться на соответствующих страницах.

Если что-то из этого вызывает вопросы, непонимание или можно сделать проще — обязательно пиши. Я всегда на связи и открыт к диалогу.
